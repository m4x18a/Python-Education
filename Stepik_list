# На вход программе подается натуральное число n, а затем n строк. Напишите программу, которая создает из указанных строк список и выводит его.

list_s = []
for i in range(int(input())):
    s = input()
    list_s.append(s)
print(list_s)

# Дополните приведенный код, чтобы он: Вывел длину списка; Вывел последний элемент списка; Вывел список в обратном порядке (вспоминаем срезы); Вывел YES если список содержит числа 5 и 17, и NO в противном случае; Вывел список с удаленным первым и последним элементами.

numbers = [2, 6, 3, 14, 10, 4, 11, 16, 12, 5, 4, 16, 1, 0, 8, 16, 10, 10, 8, 5, 1, 11, 10, 10, 12, 0, 0, 6, 14, 8, 2, 12, 14, 5, 6, 12, 1, 2, 10, 14, 9, 1, 15, 1, 2, 14, 16, 6, 7, 5]
print(len(numbers))
print(numbers[-1])
print(numbers[::-1])
if 5 in numbers and 17 in numbers:
    print('YES')
else:
    print('NO')
del numbers[0]
del numbers[-1]
print(numbers)

# На вход программе подается натуральное число n (n >= 2), а затем nn целых чисел. Напишите программу, которая создает из указанных чисел список, состоящий из сумм соседних чисел (0 и 1, 1 и 2, 2 и 3 и т.д.).

n = int(input())
l = []
a = int(input())
for i in range(n - 1):
    x = int(input())
    l.append(x + a)
    a = x
print(l)

# На вход программе подается натуральное число n, а затем n целых чисел. Напишите программу, которая создает из указанных чисел список, затем удаляет все элементы стоящие по нечетным индексам, а затем выводит полученный список.

n = int(input())
l = []
for i in range(n):
    x = int(input())
    l.append(x)
del l[1::2]
print(l)

# На вход программе подается натуральное число n и n строк, а затем число k. Напишите программу, которая выводит k-ую букву из введенных строк на одной строке без пробелов.

n = int(input())
l = []
for i in range(n):
    s = input()
    l.append(s)
k = int(input())
for c in l:
    if len(c) >= k:
        print(c[k - 1], end='')

# На вход программе подается натуральное число n, затем n строк, затем еще одна строка — поисковый запрос. Напишите программу, которая выводит все введенные строки, в которых встречается поисковый запрос. 

n = int(input())
l = []
for i in range(n):
    l.append(input())
s = input()
for c in l:
    if s.lower() in c.lower():
        print(c)

# На вход программе подается натуральное число n, затем n строк, затем число k — количество поисковых запросов, затем k строк — поисковые запросы. Напишите программу, которая выводит все введенные строки, в которых встречаются все поисковые запросы.

n = int(input())
n_list = []
q_list = []
a_list = []
for _ in range(n):
    n_list.append(input())
q = int(input())
for _ in range(q):
    q_list.append(input())
for f in n_list:
    count = 0
    for s in q_list:
        if s.lower() in f.lower():
            count += 1
    if count == len(q_list):
        a_list.append(f)
print(*a_list, sep='\n')

# На вход программе подается натуральное число n, а затем n целых чисел. Напишите программу, которая сначала выводит все отрицательные числа, затем нули, а затем все положительные числа, каждое на отдельной строке. Числа должны быть выведены в том же порядке, в котором они были введены.

n = int(input())
n_list = []
z_list = []
p_list = []
for _ in range(n):
    x = int(input())
    if x < 0:
        n_list.append(x)
    elif x == 0:
        z_list.append(x)
    else:
        p_list.append(x)
print(*n_list, sep='\n')
print(*z_list, sep='\n')
print(*p_list, sep='\n')

# На вход программе подается строка текста, содержащая целые числа. Напишите программу, которая по заданным числам строит столбчатую диаграмму.

n = input()
numbers = n.split()
for i in range(len(numbers)):
    numbers[i] = int(numbers[i])
for c in numbers:
    print('+' * c)

# На вход программе подается строка текста, содержащая натуральные числа. Из данной строки формируется список чисел. Напишите программу, которая подсчитывает, сколько в полученном списке пар элементов, равных друг другу. Считается, что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать.

n = input().split()
count = 0
for i in range(0, len(n) - 1):
    a = n[i]
    for k in range(i + 1, len(n)):
        b = n[k]
        if a == b:
            count += 1
print(count)

# 




