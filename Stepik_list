# На вход программе подается натуральное число n, а затем n строк. Напишите программу, которая создает из указанных строк список и выводит его.

list_s = []
for i in range(int(input())):
    s = input()
    list_s.append(s)
print(list_s)

# Дополните приведенный код, чтобы он: Вывел длину списка; Вывел последний элемент списка; Вывел список в обратном порядке (вспоминаем срезы); Вывел YES если список содержит числа 5 и 17, и NO в противном случае; Вывел список с удаленным первым и последним элементами.

numbers = [2, 6, 3, 14, 10, 4, 11, 16, 12, 5, 4, 16, 1, 0, 8, 16, 10, 10, 8, 5, 1, 11, 10, 10, 12, 0, 0, 6, 14, 8, 2, 12, 14, 5, 6, 12, 1, 2, 10, 14, 9, 1, 15, 1, 2, 14, 16, 6, 7, 5]
print(len(numbers))
print(numbers[-1])
print(numbers[::-1])
if 5 in numbers and 17 in numbers:
    print('YES')
else:
    print('NO')
del numbers[0]
del numbers[-1]
print(numbers)

# На вход программе подается натуральное число n (n >= 2), а затем nn целых чисел. Напишите программу, которая создает из указанных чисел список, состоящий из сумм соседних чисел (0 и 1, 1 и 2, 2 и 3 и т.д.).

n = int(input())
l = []
a = int(input())
for i in range(n - 1):
    x = int(input())
    l.append(x + a)
    a = x
print(l)

# На вход программе подается натуральное число n, а затем n целых чисел. Напишите программу, которая создает из указанных чисел список, затем удаляет все элементы стоящие по нечетным индексам, а затем выводит полученный список.

n = int(input())
l = []
for i in range(n):
    x = int(input())
    l.append(x)
del l[1::2]
print(l)

# На вход программе подается натуральное число n и n строк, а затем число k. Напишите программу, которая выводит k-ую букву из введенных строк на одной строке без пробелов.

n = int(input())
l = []
for i in range(n):
    s = input()
    l.append(s)
k = int(input())
for c in l:
    if len(c) >= k:
        print(c[k - 1], end='')

# На вход программе подается натуральное число n, затем n строк, затем еще одна строка — поисковый запрос. Напишите программу, которая выводит все введенные строки, в которых встречается поисковый запрос. 

n = int(input())
l = []
for i in range(n):
    l.append(input())
s = input()
for c in l:
    if s.lower() in c.lower():
        print(c)

# На вход программе подается натуральное число n, затем n строк, затем число k — количество поисковых запросов, затем k строк — поисковые запросы. Напишите программу, которая выводит все введенные строки, в которых встречаются все поисковые запросы.

n = int(input())
n_list = []
q_list = []
a_list = []
for _ in range(n):
    n_list.append(input())
q = int(input())
for _ in range(q):
    q_list.append(input())
for f in n_list:
    count = 0
    for s in q_list:
        if s.lower() in f.lower():
            count += 1
    if count == len(q_list):
        a_list.append(f)
print(*a_list, sep='\n')

# На вход программе подается натуральное число n, а затем n целых чисел. Напишите программу, которая сначала выводит все отрицательные числа, затем нули, а затем все положительные числа, каждое на отдельной строке. Числа должны быть выведены в том же порядке, в котором они были введены.

n = int(input())
n_list = []
z_list = []
p_list = []
for _ in range(n):
    x = int(input())
    if x < 0:
        n_list.append(x)
    elif x == 0:
        z_list.append(x)
    else:
        p_list.append(x)
print(*n_list, sep='\n')
print(*z_list, sep='\n')
print(*p_list, sep='\n')

# На вход программе подается строка текста, содержащая целые числа. Напишите программу, которая по заданным числам строит столбчатую диаграмму.

n = input()
numbers = n.split()
for i in range(len(numbers)):
    numbers[i] = int(numbers[i])
for c in numbers:
    print('+' * c)

# На вход программе подается строка текста, содержащая натуральные числа. Из данной строки формируется список чисел. Напишите программу, которая подсчитывает, сколько в полученном списке пар элементов, равных друг другу. Считается, что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать.

n = input().split()
count = 0
for i in range(0, len(n) - 1):
    a = n[i]
    for k in range(i + 1, len(n)):
        b = n[k]
        if a == b:
            count += 1
print(count)

# На вход программе подается строка текста, содержащая различные натуральные числа. Из данной строки формируется список чисел. Напишите программу, которая меняет местами минимальный и максимальный элемент этого списка.

n = input().split()
for i in range(len(n)):
    n[i] = int(n[i])
a = n.index(min(n))
b = n.index(max(n))
n[a], n[b] = n[b], n[a] 
print(*n)

# На первой строке вводится символ решётки и сразу же натуральное число n — количество строк в программе, не считая первой. Далее следует n строк кода. Нужно вывести те же строки, но удалить комментарии и символы пустого пространства в конце строк. Пустую строку вместо первой строки ввода выводить не надо.

n = input()
a = int(n[1:])
for i in range(a):
    s = input()
    if '#' in s:
        b = s[:s.find('#')]
        print(b.rstrip())
    else:
        print(s)
        
# На вход программе подается строка текста, содержащая целые числа. Из данной строки формируется список чисел. Напишите программу, которая сортирует и выводит данный список сначала по возрастанию, а затем по убыванию. 

n = input().split()
for i in range(len(n)):
    n[i] = int(n[i])
n.sort()
print(*n)
n.sort(reverse = True)
print(*n)

# Дополните приведенный код, используя списочное выражение так, чтобы получить новый список, содержащий строки исходного списка с удаленным первым символом.

keywords = ['False', 'True', 'None', 'and', 'with', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'try', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'while', 'yield']

new_keywords = [c[1:len(c) + 1] for c in keywords]

print(new_keywords)

# Оптимизируйте приведенный код, реализующий алгоритм пузырьковой сортировки.

a = [17, 24, 91, 96, 67, -27, 79, -71, -71, 58, 48, 88, 88, -16, -78, 96, -76, 56, 92, 1, 32, -17, 36, 88, -61, -97, -37, -84, 50, 47, 94, -6, 52, -76, 93, 14, -32, 98, -65, -16, -9, -68, -20, -40, -71, 93, -91, 44, 25, 79, 97, 0, -94, 7, -47, -96, -55, -58, -78, -78, -79, 75, 44, -56, -41, 38, 16, 70, 17, -17, -24, -83, -74, -73, 11, -26, 63, -75, -19, -13, -51, -74, 21, -8, 21, -68, -66, -84, -95, 78, 69, -29, 39, 38, -55, 7, -11, -26, -62, -84]

n = len(a)
for i in range(n - 1):
    flag = False
    for j in range(n - i - 1):
        if a[j] > a[j + 1]:
            a[j], a[j + 1] = a[j + 1], a[j]
            flag = True   
    if flag == False:
            break
print(a)

# Отсортируйте список по возрастанию, реализовав алгоритм сортировки выбором.

a = [78, -32, 5, 39, 58, -5, -63, 57, 72, 9, 53, -1, 63, -97, -21, -94, -47, 57, -8, 60, -23, -72, -22, -79, 90, 96,
     -41, -71, -48, 84, 89, -96, 41, -16, 94, -60, -64, -39, 60, -14, -62, -19, -3, 32, 98, 14, 43, 3, -56, 71, -71,
     -67, 80, 27, 92, 92, -64, 0, -77, 2, -26, 41, 3, -31, 48, 39, 20, -30, 35, 32, -58, 2, 63, 64, 66, 62, 82, -62, 9,
     -52, 35, -61, 87, 78, 93, -42, 87, -72, -10, -36, 61, -16, 59, 59, 22, -24, -67, 76, -94, 59]

n = len(a)

# реализация алгоритма сортировки выбором

for i in range(n - 1):
    maxx = a[i]
    index_maxx = i
    for j in range(i + 1, n):
        if a[j] < a[i] and a[j] < maxx:
            maxx = a[j]
            index_maxx = j
    a[i], a[index_maxx] = a[index_maxx], a[i]

print(a)

"""На вход программе подается строка текста. Напишите программу, которая определяет является ли введенная строка корректным телефонным номером. Строка текста является корректным телефонным номером если она имеет формат:
abc-def-hijk или
7-abc-def-hijk
где a, b, c, d, e, f, h, i, j, k – цифры от 0 до 9"""

n = input().split('-')
flag = 'YES'
for c in n:
    for k in c:
        if k not in '1234567890':
            flag = 'NO'
            break
if flag == 'NO' and (len(n) != 3 or len(n) != 4):
    print(flag)
else:
    b = [len(s) for s in n]
    if b == [1, 3, 3, 4] and n[0] == '7':
        print('YES')
    elif b == [3, 3, 4]:
        print('YES')
    else:
        print('NO')

# На вход программе подается число n. Напишите программу, которая создает и выводит вложенный список, состоящий из n списков [[1, 2, ..., n], [1, 2, ..., n], ..., [1, 2, ..., n]].

n = int(input())
list1 = [list(range(1, n + 1)) for i in range(n)]
print(list1)





